//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PedidosServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PedidoFastFood", Namespace="http://schemas.datacontract.org/2004/07/AppFastFoodService.Model")]
    public partial class PedidoFastFood : object
    {
        
        private string CodigoPedidoField;
        
        private System.Nullable<System.DateTime> FechaEntregaField;
        
        private System.DateTime FechaPedidoField;
        
        private int IdClienteField;
        
        private string IdEstadoPedidoField;
        
        private int IdProveedorField;
        
        private decimal ImporteTotField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodigoPedido
        {
            get
            {
                return this.CodigoPedidoField;
            }
            set
            {
                this.CodigoPedidoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FechaEntrega
        {
            get
            {
                return this.FechaEntregaField;
            }
            set
            {
                this.FechaEntregaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaPedido
        {
            get
            {
                return this.FechaPedidoField;
            }
            set
            {
                this.FechaPedidoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCliente
        {
            get
            {
                return this.IdClienteField;
            }
            set
            {
                this.IdClienteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdEstadoPedido
        {
            get
            {
                return this.IdEstadoPedidoField;
            }
            set
            {
                this.IdEstadoPedidoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdProveedor
        {
            get
            {
                return this.IdProveedorField;
            }
            set
            {
                this.IdProveedorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ImporteTot
        {
            get
            {
                return this.ImporteTotField;
            }
            set
            {
                this.ImporteTotField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PedidosServiceReference.IPedidosFastFoodServices")]
    public interface IPedidosFastFoodServices
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPedidosFastFoodServices/registrarPedido", ReplyAction="http://tempuri.org/IPedidosFastFoodServices/registrarPedidoResponse")]
        System.Threading.Tasks.Task<PedidosServiceReference.PedidoFastFood> registrarPedidoAsync(PedidosServiceReference.PedidoFastFood pedidoFastFood);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPedidosFastFoodServices/listaPedidos", ReplyAction="http://tempuri.org/IPedidosFastFoodServices/listaPedidosResponse")]
        System.Threading.Tasks.Task<PedidosServiceReference.PedidoFastFood[]> listaPedidosAsync(int idcliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPedidosFastFoodServices/actualizarEstadoPedido", ReplyAction="http://tempuri.org/IPedidosFastFoodServices/actualizarEstadoPedidoResponse")]
        System.Threading.Tasks.Task<PedidosServiceReference.PedidoFastFood> actualizarEstadoPedidoAsync(PedidosServiceReference.PedidoFastFood pedidoFastFood);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IPedidosFastFoodServicesChannel : PedidosServiceReference.IPedidosFastFoodServices, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class PedidosFastFoodServicesClient : System.ServiceModel.ClientBase<PedidosServiceReference.IPedidosFastFoodServices>, PedidosServiceReference.IPedidosFastFoodServices
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PedidosFastFoodServicesClient() : 
                base(PedidosFastFoodServicesClient.GetDefaultBinding(), PedidosFastFoodServicesClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IPedidosFastFoodServices.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PedidosFastFoodServicesClient(EndpointConfiguration endpointConfiguration) : 
                base(PedidosFastFoodServicesClient.GetBindingForEndpoint(endpointConfiguration), PedidosFastFoodServicesClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PedidosFastFoodServicesClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PedidosFastFoodServicesClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PedidosFastFoodServicesClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PedidosFastFoodServicesClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PedidosFastFoodServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<PedidosServiceReference.PedidoFastFood> registrarPedidoAsync(PedidosServiceReference.PedidoFastFood pedidoFastFood)
        {
            return base.Channel.registrarPedidoAsync(pedidoFastFood);
        }
        
        public System.Threading.Tasks.Task<PedidosServiceReference.PedidoFastFood[]> listaPedidosAsync(int idcliente)
        {
            return base.Channel.listaPedidosAsync(idcliente);
        }
        
        public System.Threading.Tasks.Task<PedidosServiceReference.PedidoFastFood> actualizarEstadoPedidoAsync(PedidosServiceReference.PedidoFastFood pedidoFastFood)
        {
            return base.Channel.actualizarEstadoPedidoAsync(pedidoFastFood);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPedidosFastFoodServices))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPedidosFastFoodServices))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:65518/PedidosFastFoodServices.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PedidosFastFoodServicesClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPedidosFastFoodServices);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PedidosFastFoodServicesClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPedidosFastFoodServices);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IPedidosFastFoodServices,
        }
    }
}
